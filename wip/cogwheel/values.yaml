# Default values for cogwheel.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 1

image:
  repository: quay.io/cdis/cogwheel
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.
  tag: ""

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  # Specifies whether a service account should be created
  create: false
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

service:
  type: ClusterIP
  port: 80

ingress:
  enabled: false
  className: ""
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: chart-example.local
      paths:
        - path: /
          pathType: ImplementationSpecific
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

resources:
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  limits:
    cpu: 1000m
    memory: 1Gi
  requests:
    cpu: 10m
    memory: 128Mi

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

nodeSelector: {}

tolerations: []

affinity: {}


volumes:
- name: cogwheel-g3auto
  secret:
    secretName: cogwheel-g3auto


volumeMounts:
- mountPath: "/etc/shibboleth/sp-encrypt-cert.pem"
  subPath: "sp-encrypt-cert.pem"
  name: cogwheel-g3auto
- mountPath: "/etc/shibboleth/sp-encrypt-key.pem"
  subPath: "sp-encrypt-key.pem"
  name: cogwheel-g3auto
- mountPath: "/etc/shibboleth/sp-signing-cert.pem"
  subPath: "sp-signing-cert.pem"
  name: cogwheel-g3auto
- mountPath: "/etc/shibboleth/sp-signing-key.pem"
  subPath: "sp-signing-key.pem"
  name: cogwheel-g3auto
- mountPath: "/etc/shibboleth/mdqsigner.pem"
  subPath: "mdqsigner.pem"
  name: cogwheel-g3auto
- mountPath: "/etc/shibboleth/shibboleth2.xml"
  subPath: "shibboleth2.xml"
  name: cogwheel-g3auto
- mountPath: "/etc/httpd/conf.d/ssl.conf"
  subPath: "ssl.conf"
  name: cogwheel-g3auto
- mountPath: "/etc/cogwheel/wsgi_settings.py"
  subPath: "wsgi_settings.py"
  name: cogwheel-g3auto
- mountPath: "/etc/cogwheel/oauth2_metadata.json"
  subPath: "oauth2_metadata.json"
  name: cogwheel-g3auto
- mountPath: "/etc/cogwheel/rsa/privatekey.pem"
  subPath: "rsa_privatekey.pem"
  name: cogwheel-g3auto
- mountPath: "/etc/cogwheel/rsa/publickey.pem"
  subPath: "rsa_publickey.pem"
  name: cogwheel-g3auto